[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = 'if G.CONTROLLER.text_input_hook == e and G.CONTROLLER.HID.controller then'
position = "at"
payload = 'if G.CONTROLLER.text_input_hook == e and (G.CONTROLLER.HID.controller or G.CONTROLLER.HID.touch) then'
match_indent = true

[[patches]]
[patches.pattern]
target = "globals.lua" 
pattern = '--loadstring("\105\102\32\108\111\118\101\46\115\121\115\116\101\109\46\103\101\116\79\83\40\41\32\61\61\32\39\105\79\83\39\32\111\114\32\108\111\118\101\46\115\121\115\116\101\109\46\103\101\116\79\83\40\41\32\61\61\32\39\65\110\100\114\111\105\100\39\32\116\104\101\110\10\32\32\108\111\118\101\46\101\118\101\110\116\46\113\117\105\116\40\41\10\101\110\100\10")()'
position = "at"
payload = '''
-- Removed 'loadstring' line which generated lua code that exited upon starting on mobile
if love.system.getOS() == 'Android' or love.system.getOS() == 'iOS' then
	self.F_SAVE_TIMER = 5
	self.F_DISCORD = true
	self.F_NO_ACHIEVEMENTS = true
	self.F_CRASH_REPORTS = false
	self.F_SOUND_THREAD = true
	self.F_VIDEO_SETTINGS = false
	self.F_ENGLISH_ONLY = false
	self.F_QUIT_BUTTON = false
	self.F_MOBILE_UI = true
end'''
match_indent = true

[[patches]]
[patches.pattern]
target = "conf.lua"
pattern = 't.window.minheight = 100'
position = "after"
payload = '''
t.externalstorage = true
t.window.usedpiscale = false
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "main.lua"
pattern = 'G.FPS_CAP = G.FPS_CAP or 500'
position = "at"
payload = "G.FPS_CAP = G.FPS_CAP or select(3, love.window.getMode())['refreshrate']"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "highdpi = (love.system.getOS() == 'OS X')"
position = "at"
payload = "highdpi = (love.system.getOS() == 'OS X' or love.system.getOS() == 'Android' or love.system.getOS() == 'iOS')"
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = 'resizable = true,'
position = "at"
payload = "resizable = not (love.system.getOS() == 'Android' or love.system.getOS() == 'iOS'),"
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "love.graphics.setShader( G.SHADERS['CRT'])"
position = "at"
payload = ''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "function create_keyboard_input(args)"
position = "after"
payload = '''
	--bandaid fix for having an actual ui element but hey look at that we use the built in keyboard instead of uh...
	love.keyboard.setTextInput(true) do return {n=G.UIT.ROOT, config={align = "cm", padding = 15, r = 0.1, colour = {G.C.GREY[1], G.C.GREY[2], G.C.GREY[3],0.7}}, nodes={}} end
'''
match_indent = true
